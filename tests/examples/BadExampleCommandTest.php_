<?php

use Illuminate\Foundation\Testing\WithoutMiddleware;
use App\Console\Commands\BadExampleCommand;
use Symfony\Component\Console\Output\BufferedOutput;
use Symfony\Component\Console\Input\ArrayInput;

class BadExampleCommandTest extends TestCase
{
  public function setUp()
  {
    parent::setUp();
    $this->command = new \App\Console\Commands\BadExampleCommand;
    $this->command->setLaravel($this->app);
  }

  /** example:start - no options
   * @expectedException RuntimeException
   * @expectedExceptionMessage Either id or tag needed.
   */
  public function _testBadExampleCommandWithoutMandatoryOptionsWillFail()
  {
    $output = $this->execute();
  }

  /** example:start - id specified */
  public function testBadExampleCommandWithIdWillSuccess()
  {
    $output = $this->execute(['--id' => 'id1']);
    $this->assertEquals('BadExampleCommand called with id=id1', 
      trim($output->fetch()));
  }

  /** example:star - tag specified */
  public function _testBadExampleCommandWithTagWillSuccess()
  {
    $output = $this->execute(['--tag' => 'tag1']);
    $this->assertEquals('BadExampleCommand called with tag=tag1', $output);
  }

  /** example:start - id specified (verbose) */
  public function _testBadExampleCommandWithIdVerboseWillSuccess()
  {
    $output = $this->execute(['--id' => 'id1', '-v' ]);
    $this->assertEquals('BadExampleCommand called with id=id1', 
      trim($output->fetch()));
  }

  protected function execute(array $params = [])
  {
    $output = new BufferedOutput();
    $this->command->run( new ArrayInput($params), $output);
    return $output;
  }

}
